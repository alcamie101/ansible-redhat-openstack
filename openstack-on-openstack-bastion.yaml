heat_template_version: 2013-05-23

description: Deploy setup for Openstack training. Includes a bastion.

parameter_groups:
  - label: Cloud Server Settings
    parameters:
    - compute_count
    - instance_type
    - image_id
#    - compute_hostname
#    - controller_hostname
#    - network_hostname

  - label: Bastion Server Settings
    parameters:
    - bastion_image_id

parameters:

  compute_count:
    type: number
    label: Compute Nodes
    default: 3
    description: Number of compute nodes. Must be between 3 and 12 servers.
    constraints:
    - range: 
        min: 3 
        max: 12

#  compute_hostname:
#    label: Compute Name
#    description: Hostname for the compute servers
#    type: string
#    default: openstack-compute

#  controller_hostname:
#    label: Controller Name
#    description: Hostname for the controller servers
#    type: string
#    default: openstack-controller

#  network_hostname:
#    label: Network Server Name
#    description: Hostname for the network servers
#    type: string
#    default: openstack-network

  key_name:
    type: string
    label: Key-pair Name
    description: Name of key-pair to be used for instances

  instance_type:
    type: string
    label: Instance Type
    default: m1.medium
    description: Instance type to be used for the compute nodes
    constraints:
    - allowed_values:
      - m1.small
      - m1.medium
      - m1.large

  image_id:
    type: string
    label: General Image ID
    description: UUID of image to use for the instaces

  bastion_image_id:
    type: string
    label: Bastion Image ID
    description: UUID of the bastion image to use for the bastion


#  network_name_mgnt:
#    type: string
#    label: Management network name
#    default: management
#    description: |
#        The default name is management. This is the management network that you         will access vms from.
#  network_name_tenant:
#    type: string
#    label: Tenant network name
#    default: tenant
#    description: |
#        The default name is tenant. This is the tenant network that you will access 

resources:
  open_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: open rule for openstack
      name: openstack
      rules: [{"remote_ip_prefix": "0.0.0.0/0", "port_range_min": 1, "port_range_max": 65535, "protocol": "tcp"}, {"remote_ip_prefix": "0.0.0.0/0", "port_range_min": 1, "port_range_max": 65535, "protocol": "udp"}]

  management_network:
    type: "OS::Neutron::Net"
    properties:
#      name: { get_param: network_name_mgnt }
      name: "management" 

  management_subnet:
    type: "OS::Neutron::Subnet"
    properties:
      network_id: { get_resource: management_network }
      cidr: "192.168.10.0/24"

  tenant_network:
    type: "OS::Neutron::Net"
    properties:
#      name: { get_resource: network_name_tenant } 
      name: "tennant" 

  tenant_subnet:
    type: "OS::Neutron::Subnet"
    properties:
      network_id: { get_resource: tenant_network }
      cidr: "192.168.11.0/24"

  floating_ip_network:
    type: "OS::Neutron::Net"
    properties:
      name: "floating ip"

  floating_ip_subnet:
    type: "OS::Neutron::Subnet"
    properties:
      network_id: { get_resource: floating_ip_network }
      cidr: "192.168.12.0/24"

  public_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: "public"

  coreos_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: public_router }
      subnet_id: { get_resource: management_subnet }

  operations_management_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: public_router }
      subnet_id: { get_resource: floating_ip_subnet }

  controller:
    type: OS::Heat::ResourceGroup
    depends_on: management_subnet
    properties:
      count: 3
      resource_def:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image_id }
          flavor: m1.medium
#          name: { get_param: controller_hostname }
          name:
          networks:
            - { network: { get_resource: management_network } }
          security_groups:
            - { "Ref" : "open_security_group" }

  compute:
    type: OS::Heat::ResourceGroup
    depends_on:
      - management_subnet
      - tenant_subnet
    properties:
      count: { get_param: compute_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image_id }
          flavor: { get_param: instance_type }
#          name: { get_param: compute_hostname }
          name:
          networks:
            - { network: { get_resource: management_network } }
            - { network: { get_resource: tenant_network } }
          security_groups:
            - { "Ref" : "open_security_group" }
          user_data: |
            #!/bin/bash
            cat <<EOF > /etc/sysconfig/network-scripts/ifcfg-eth1
            DEVICE=eth1
            BOOTPROTO="dhcp"
            ONBOOT=yes
            USERCTL=no
            EOF
            systemctl restart network

  network:
    type: OS::Heat::ResourceGroup
    depends_on: 
      - management_subnet
      - floating_ip_subnet
    properties:
      count: 3
      resource_def:
        type: OS::Nova::Server
        properties:
          name:
          key_name: { get_param: key_name }
          image: { get_param: image_id }
          flavor: m1.medium
          networks:
            - { network: { get_resource: management_network } }
            - { network: { get_resource: floating_ip_network } }
          security_groups:
            - { "Ref" : "open_security_group" }

  bastion_machine:
    type: OS::Heat::ResourceGroup
    depends_on: management_subnet
    properties:
      count: 1
      resource_def:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key_name }
          image: { get_param: bastion_image_id }
          flavor: m1.medium
          name: openstack-bastion
          networks:
            - { network: { get_resource: management_network } }
          security_groups:
            - { "Ref" : "open_security_group" }
